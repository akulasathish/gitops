name: Deploy EC2 Infrastructure with CloudFormation

on:
  push:
    branches:
      - main  # Trigger this action on pushing to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS CLI with IAM credentials
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change this to your region

      # Create CloudFormation stack to launch EC2
      - name: Create CloudFormation Stack
        run: |
          aws cloudformation create-stack \
            --stack-name simple-html-app-stack \
            --template-body file://ec2-infrastructure.yml \
            --capabilities CAPABILITY_IAM

      # Wait for stack creation to complete
      - name: Wait for Stack to be created
        run: |
          aws cloudformation wait stack-create-complete --stack-name simple-html-app-stack

      # Retrieve EC2 instance details
      - name: Get EC2 Instance Public IP
        run: |
          INSTANCE_IP=$(aws cloudformation describe-stacks \
            --stack-name simple-html-app-stack \
            --query "Stacks[0].Outputs[?OutputKey=='EC2InstancePublicIP'].OutputValue" \
            --output text)
          echo "EC2 instance IP: $INSTANCE_IP"

      # Deploy HTML to EC2
      - name: Deploy HTML to EC2
        run: |
          INSTANCE_IP=$(aws cloudformation describe-stacks \
            --stack-name simple-html-app-stack \
            --query "Stacks[0].Outputs[?OutputKey=='EC2InstancePublicIP'].OutputValue" \
            --output text)
          echo "Deploying to EC2 instance with IP: $INSTANCE_IP"
          scp -i your-ec2-key.pem -o StrictHostKeyChecking=no index.html ec2-user@$INSTANCE_IP:/var/www/html/index.html
